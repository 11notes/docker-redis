name: "kv"

x-lockdown: &lockdown
  # prevents write access to the image itself
  read_only: true
  # prevents any process within the container to gain more privileges
  security_opt:
    - "no-new-privileges=true"

x-image-redis: &image
  image: "11notes/redis:7.4.6"
  <<: *lockdown

services:
  redis:
    <<: *image
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      TZ: "Europe/Zurich"
    networks:
      backend:
    volumes:
      - "redis.etc:/redis/etc"
      - "redis.var:/redis/var"
    tmpfs:
      - "/run:uid=1000,gid=1000"
    restart: "always"

  # start a replica of redis
  replica:
    <<: *image
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      TZ: "Europe/Zurich"
    command: "--replica redis"
    networks:
      backend:
    volumes:
      - "replica.etc:/redis/etc"
      - "replica.var:/redis/var"
    tmpfs:
      - "/run:uid=1000,gid=1000"
    restart: "always"

  # start Redis only in-memory
  in-memory:
    <<: *image
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      TZ: "Europe/Zurich"
    command: "--in-memory"
    networks:
      backend:
    volumes:
      - "in-memory.etc:/redis/etc"
    tmpfs:
      - "/run:uid=1000,gid=1000"
    restart: "always"

  # execute CLI commands via redis-cli
  cli:
    <<: *image
    depends_on:
      redis:
        condition: "service_healthy"
        restart: true
    environment:
      REDIS_HOST: "redis"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      TZ: "Europe/Zurich"
    # start redis in cmd mode
    entrypoint: ["/usr/local/bin/redis", "--cmd"]
    # commands to execute in order
    command: 
      - PING
      - --version
      - SET key value NX
      - GET key
    networks:
      backend:

  # demo container to actually view the databases
  gui:
    image: "redis/redisinsight"
    environment:
      RI_REDIS_HOST0: "redis"
      RI_REDIS_PASSWORD0: "${REDIS_PASSWORD}"
      RI_REDIS_HOST1: "replica"
      RI_REDIS_PASSWORD1: "${REDIS_PASSWORD}"
      RI_REDIS_HOST2: "in-memory"
      RI_REDIS_PASSWORD2: "${REDIS_PASSWORD}"
      TZ: "Europe/Zurich"
    ports:
      - "3000:5540/tcp"
    networks:
      backend:
      frontend:

volumes:
  redis.etc:
  redis.var:
  replica.etc:
  replica.var:
  in-memory.etc:

networks:
  frontend:
  backend:
    internal: true